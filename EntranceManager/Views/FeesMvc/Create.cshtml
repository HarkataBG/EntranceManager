@model ApartmentDto

@{
    ViewData["Title"] = "Създаване на апартамент";

    // Cast ViewBag collections to List<SelectListItem>
    var entrances = ViewBag.Entrances as List<SelectListItem>;
    var users = ViewBag.Users as List<SelectListItem>;
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Create" method="post" class="mt-4">
    <div class="mb-3">
        <label asp-for="Floor" class="form-label">Етаж</label>
        <input asp-for="Floor" class="form-control" />
        <span asp-validation-for="Floor" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Number" class="form-label">Номер на апартамент</label>
        <input asp-for="Number" class="form-control" />
        <span asp-validation-for="Number" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="EntranceId" class="form-label">Вход</label>
        <select asp-for="EntranceId" class="form-select" id="entranceSelect" name="EntranceId">
            <option value="">-- Изберете вход --</option>
            @if (entrances != null)
            {
                foreach (var entrance in entrances)
                {
                    <option value="@entrance.Value" selected="@(entrance.Value == Model.EntranceId.ToString() ? "selected" : null)">
                        @entrance.Text
                    </option>
                }
            }
        </select>
        <span asp-validation-for="EntranceId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="OwnerUserId" class="form-label">Собственик</label>
        <select asp-for="OwnerUserId" class="form-select" id="ownerSelect" name="OwnerUserId">
            <option value="">-- Изберете собственик --</option>
            @* Owners will be filtered by entrance selection via JavaScript *@
        </select>
        <span asp-validation-for="OwnerUserId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="NumberOfChildren" class="form-label">Брой деца</label>
        <input asp-for="NumberOfChildren" class="form-control" />
        <span asp-validation-for="NumberOfChildren" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="NumberOfPets" class="form-label">Брой домашни любимци</label>
        <input asp-for="NumberOfPets" class="form-control" />
        <span asp-validation-for="NumberOfPets" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Създай</button>
    <a asp-action="Index" class="btn btn-secondary ms-2">Отказ</a>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        (function () {
            // Prepare users grouped by EntranceId for filtering
            var users = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(users));

            var entranceSelect = document.getElementById('entranceSelect');
            var ownerSelect = document.getElementById('ownerSelect');

            function populateOwners(entranceId) {
                ownerSelect.innerHTML = '<option value="">-- Изберете собственик --</option>';

                if (!entranceId) return;

                // Filter users by entrance group name (which holds EntranceId)
                var filteredUsers = users.filter(function (u) {
                    return u.Group && u.Group.Name === entranceId;
                });

                filteredUsers.forEach(function (user) {
                    var option = document.createElement('option');
                    option.value = user.Value;
                    option.textContent = user.Text;
                    ownerSelect.appendChild(option);
                });

                // If model has OwnerUserId, select it
                var selectedOwnerId = '@Model.OwnerUserId';
                if (selectedOwnerId) {
                    ownerSelect.value = selectedOwnerId;
                }
            }

            // On entrance change, update owners dropdown
            entranceSelect.addEventListener('change', function () {
                populateOwners(this.value);
            });

            // On page load, populate owners if EntranceId is selected (e.g., after validation error)
            if (entranceSelect.value) {
                populateOwners(entranceSelect.value);
            }
        })();
    </script>
}